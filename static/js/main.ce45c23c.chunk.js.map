{"version":3,"sources":["components/Viewer/index.jsx",".secrets.js","state/index.js","components/BibleSelector/index.jsx","components/BookSelector/index.jsx","components/ChapterSelector/index.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["useStyles","makeStyles","theme","root","display","toolbar","paddingRight","appBarSpacer","mixins","Viewer","book","chapter","classes","className","Container","Inner","name","number","html","content","allowedTags","secrets","apikey","setBibles","a","fetch","method","headers","response","json","data","bibles","forEach","b","push","id","abbreviation","console","log","bibleId","setBooks","books","chapters","c","chapterId","setChapter","url","copyright","BibleSelector","activeBible","onSelectBible","React","useState","anchorEl","setAnchorEl","handleClose","length","Button","onClick","event","currentTarget","fontSize","Menu","keepMounted","open","Boolean","onClose","map","MenuItem","key","selected","disabled","BookSelector","activeBook","onSelectBook","ChapterSelector","activeChapter","onSelectChapter","flexGrow","menuButton","marginRight","spacing","title","App","setChapters","setActiveBook","setActiveBible","setActiveChapter","useEffect","fetchBibles","AppBar","position","Toolbar","Typography","variant","filter","fetchBooks","bookId","fetchChapter","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ce45c23c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Container, makeStyles } from '@material-ui/core';\r\nimport SanitizedHTML from 'react-sanitized-html';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar\r\n}));\r\n\r\nexport default function Viewer({book, chapter}) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.appBarSpacer} />\r\n            <Container>\r\n                <Inner book={book} chapter={chapter} />\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nconst Inner = ({book, chapter}) => {\r\n    return chapter ? (<><h1>{book.name} {chapter.number}</h1>\r\n        <SanitizedHTML html={chapter.content} allowedTags={['p', 'span']}/></>) : (<div>Please select a chapter to display.</div>);\r\n}","export const secrets = {\r\n    apikey: '7e90fe667f0b422f1755ed78c75e2d79'\r\n};\r\nexport default secrets;","import secrets from '../.secrets';\r\n\r\nexport async function fetchBibles(setBibles) {\r\n    try {\r\n        const response = await fetch(`https://api.scripture.api.bible/v1/bibles`, {\r\n            method: 'GET',\r\n            headers: { 'api-key': secrets.apikey }\r\n        });\r\n        const data = await response.json();\r\n        let bibles = [];\r\n        data.data.forEach(b => { bibles.push({ id: b.id, name: b.name, abbreviation: b.abbreviation }) });\r\n        setBibles(bibles);\r\n    } catch (ex) {\r\n        setBibles([]);\r\n        console.log(\"Error!\", ex);\r\n    }\r\n}\r\n\r\nexport async function fetchBooks(bibleId, setBooks) {\r\n    let data;\r\n    let books = [];\r\n    try {\r\n        const response = await fetch(`https://api.scripture.api.bible/v1/bibles/${bibleId}/books?include-chapters-and-sections=true`, {\r\n            method: 'GET',\r\n            headers: { 'api-key': secrets.apikey }\r\n        });\r\n        data = await response.json();\r\n        data.data.forEach(b => {\r\n            let chapters = [];\r\n            b.chapters.forEach(c => { chapters.push({ id: c.id, number: c.number }) });\r\n            books.push({\r\n                id: b.id,\r\n                name: b.name,\r\n                chapters\r\n            });\r\n        });\r\n    } catch (ex) {\r\n        console.log('Error fetching Books!', ex);\r\n    } finally {\r\n        setBooks(books);\r\n    }\r\n}\r\n\r\nexport async function fetchChapter(bibleId, chapterId, setChapter) {\r\n    const url =\r\n        `https://api.scripture.api.bible/v1/bibles/${bibleId}/chapters/${chapterId}`;\r\n    const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: { 'api-key': secrets.apikey }\r\n    });\r\n    const data = await response.json();\r\n    console.log('Chapter Content', data.data.content);\r\n    setChapter({ number: data.data.number, content: data.data.content, copyright: data.data.copyright });\r\n}","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\n\r\nexport const BibleSelector = ({bibles, activeBible, onSelectBible}) => {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return bibles && bibles.length > 0 ? (\r\n        <>\r\n            <Button className=\"MuiButton-colorInherit\" onClick={handleClick}>{activeBible ? activeBible.name : \"Version\"} <ArrowDropDownIcon fontSize=\"small\" /></Button>\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n                id=\"bible-select\" >\r\n                    {bibles.map(b=>(<MenuItem key={b.id} onClick={() => { onSelectBible(b.id); handleClose();}} selected={activeBible===b.id}>{b.name} ({b.abbreviation})</MenuItem>))}\r\n            </Menu>\r\n        </>\r\n    ) : (<Button className=\"MuiButton-secondary\" disabled={true}>Version</Button>)\r\n}\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\n\r\nexport const BookSelector = ({books, activeBook, onSelectBook}) => {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return books ? (\r\n        <>\r\n            <Button className=\"MuiButton-colorInherit\" onClick={handleClick}>{activeBook!==null ? activeBook.name : \"Book\"} <ArrowDropDownIcon fontSize=\"small\" /></Button>\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n                id=\"bible-select\" >\r\n                    {books.map(b => (<MenuItem key={b.id} onClick={() => { handleClose(); onSelectBook(b.id)}} selected={activeBook && activeBook.id===b.id}>{b.name}</MenuItem>))}\r\n            </Menu>\r\n        </>\r\n    ) : (<></>);\r\n}\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\n\r\nexport function ChapterSelector({chapters, activeChapter, onSelectChapter}) {\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return chapters ? (\r\n        <>\r\n            <Button className=\"MuiButton-colorInherit\" onClick={handleClick}>{activeChapter ? activeChapter.number : \"Chapter\"} <ArrowDropDownIcon fontSize=\"small\" /></Button>\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n                id=\"bible-select\" >\r\n                    {chapters.map(c=>(<MenuItem key={c.number} onClick={() => { handleClose(); onSelectChapter(c.id) }} selected={activeChapter && activeChapter.number === c.number}>{c.number}</MenuItem>))}\r\n            </Menu>\r\n        </>\r\n    ) : (<></>);\r\n}\r\n","import React from 'react';\nimport Viewer from './components/Viewer';\nimport { fetchBibles, fetchBooks, fetchChapter } from './state';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {BibleSelector} from './components/BibleSelector';\nimport {BookSelector} from './components/BookSelector';\nimport {ChapterSelector} from './components/ChapterSelector';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\n\nfunction App() {\n    const [bibles, setBibles] = React.useState([]);\n    const [books, setBooks] = React.useState(null);\n    const [chapters, setChapters] = React.useState(null);\n    const [activeBook, setActiveBook] = React.useState(null);\n    const [activeBible, setActiveBible] = React.useState(null);\n    const [activeChapter, setActiveChapter] = React.useState(null);\n\n    const classes = useStyles();\n\n    const onSelectBible = (bibleId) => {\n        setActiveBible(bibles.filter(b => b.id === bibleId)[0]);\n        setChapters(null, setActiveBook(null, setActiveChapter(null, fetchBooks(bibleId, setBooks))));\n    }\n\n    const onSelectBook = (bookId) => {\n        setActiveBook(books.filter(b => b.id === bookId)[0]); \n        setChapters(books.filter(b => b.id === bookId)[0].chapters);\n        setActiveChapter(null);\n    }\n\n    const onSelectChapter = (chapterId) => {\n        fetchChapter(activeBible.id, chapterId, setActiveChapter);\n    }\n\n    React.useEffect(() => {\n        fetchBibles(setBibles);\n    }, []);\n\n    return (\n        <>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Bible Reader\n                </Typography>\n                    <BibleSelector bibles={bibles} activeBible={activeBible} onSelectBible={onSelectBible} />\n                    <BookSelector books={books} activeBook={activeBook} onSelectBook={onSelectBook} />\n                    <ChapterSelector chapters={chapters} activeChapter={activeChapter} onSelectChapter={onSelectChapter} />\n                </Toolbar>\n            </AppBar>\n            <Viewer book={activeBook} chapter={activeChapter} />\n        </>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}